<div class="list-item h-entry">
<a class="u-author" href="https://jeremycherfas.net"></a>
    {% set header_image = page.header.header_image|defined(true) %}
    {% set header_image_width  = page.header.header_image_width|defined(900) %}
    {% set header_image_height = page.header.header_image_height|defined(300) %}
    {% set header_image_file = page.header.header_image_file %}

    <div class="list-blog-header">
        <span class="list-blog-date">
            <time class="dt-published" datetime="{{ page.date|date("c") }}">
                <span>{{ page.date|date("d") }}</span>
                <em>{{ page.date|date("M") }}</em>
                                <em>{{ page.date|date("Y") }}</em>
            </time>
        </span>
            <h1 class="p-name"><a href="{{ page.url }}" class="u-url">{{ page.title }}</a></h1>

			{% if page.header.subhead %} 
			<h2 class="subhead">
				{{ page.header.subhead }}
			</h2>
			{% endif%} 

    </div>

    <div class="list-blog-padding">

        <span class="e-content">        
            {{ page.content }}
        </span>
                    {% if page.taxonomy.tag %}
        <span class="tags">
            {% for tag in page.taxonomy.tag %}
            <a href="{{ blog.url|rtrim('/') }}/tag{{ config.system.param_sep }}{{ tag }}" class="p-category">{{ tag }}</a>
            {% endfor %}
        </span>
        {% endif %}

        </div>

        {% set show_prev_next = true %}

    {% if show_prev_next %}

        <p class="prev-next">
            {% if not page.isFirst %}
                <a class="button" href="{{ page.nextSibling.url }}"><i class="fa fa-chevron-left"></i> Next post </a>
            {% endif %}

            {% if not page.isLast %}
                <a class="button" href="{{ page.prevSibling.url }}">Previous post <i class="fa fa-chevron-right"></i></a>
            {% endif %}
        </p>
    {% endif %}

    </div>
    
{% set myfile = ((page.url(true)) ~ '/' ~ page.header.datafilename )  %}

<script>
var thefile = "{{ myfile }}"
var myTiles = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
	maxZoom: 18,
	attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
		'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
		'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
	id: 'mapbox.streets'
}); // Creates the actual map tiles .addTo(mymap) remnoved

$.getJSON(thefile, function(data) {
	var geojson = L.geoJson(data, {
//		onEachFeature: function (feature, layer) { Don't need for now
//			layer.bindPopup(feature.properties.name); Don't need for now
//		}
});

var map = L.map('mapid').fitBounds(geojson.getBounds());
	myTiles.addTo(map);
	geojson.addTo(map);
});
</script> 
   
